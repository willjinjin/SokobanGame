void UndoMove(int room[ROWS][COLS], char *allMoves) {
    char lastmove;
    int m = 0;
    int n = 0;
    int len = strlen(allMoves);
    char x = allMoves[len - 1];
    lastmove = allMoves[len - 2];
    if (len == 0) {
        return;
    }
    
    if (lastmove == 'w') {
        m--;
    }
    else if (lastmove == 's') {
        m++;
    }
    else if (lastmove == 'a') {
        n--;
    }
    else if (lastmove == 'd') {
        n++;
    }
    int rpos, cpos;
    LocatePerson(room, &rpos, &cpos);
    
    if (room[rpos][cpos] == 6) {
        room[rpos][cpos] = 2;
    }
    else {
        room[rpos][cpos] = 0;
    }
    if (room[rpos-m][cpos-n] == 2){
        room[rpos-m][cpos-n] = 6; 
    }
    else {
        room[rpos-m][cpos-n] = 5;
    }
    
    if (x == '1') {
        if (room[rpos+m][cpos+n] == 4) {
            room[rpos+m][cpos+n] = 2;
        }
        else {
            room[rpos+m][cpos+n] = 0;
        }
        if (room[rpos][cpos] == 2) {
            room[rpos][cpos] = 4;
        }
        else {
            room[rpos][cpos] = 3;
        }
    }
    allMoves[len-2] = '\0';
}


void MakeMove(int room[ROWS][COLS], char move, char *allMoves) {
    int m = 0;
    int n = 0;
    if (move == 'w') {
        m--;
    }
    else if (move == 's') {
        m++;
    }
    else if (move == 'a') {
        n--;
    }
    else if (move == 'd') {
        n++;
    }
    else if (move == 'z') {
        UndoMove(room, allMoves);
        break;
    }
    
    
    int rpos, cpos;
    LocatePerson(room, &rpos, &cpos);
    char x='0';
    if (room[rpos+m][cpos+n] != 1)  {
        
        if ((room[rpos+m][cpos+n] == 3 || room[rpos+m][cpos+n] == 4)  && room[rpos+2*m][cpos+2*n] != 0 &&  room[rpos+2*m][cpos+2*n] != 2) {
            return;
        }
        if (room[rpos+m][cpos+n] == 3 || room[rpos+m][cpos+n] == 4) {
            if (room[rpos+2*m][cpos+2*n] == 2) {
                room[rpos+2*m][cpos+2*n] = 4;
            }
            else{
            room[rpos+ 2*m][cpos+ 2*n] = 3;
            }
            x = '1';
        }
        if (room[rpos+m][cpos+n] == 2 || room[rpos+m][cpos+n] == 4) {
            room[rpos+m][cpos+n] = 6;
        }
        else {
            room[rpos+m][cpos+n] = 5; 
        }
        if (room[rpos][cpos] == 6) {
            room[rpos][cpos] = 2;
        }
        else {
            room[rpos][cpos] = 0;
        }
        int len = strlen(allMoves);
        allMoves[len] = move;
        allMoves[len + 1] = x; 
        allMoves[len + 2] = '\0'; 
    }
}